{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.styled.js","Components/Container/Container.styled.js","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.styled.js","Components/Statistics/Statistics.jsx","Components/Container/Container.jsx","Components/Notification/Notification.styled.js","Components/Notification/Notification.jsx","Components/App/App.styled.js","Components/App/App.jsx","index.js"],"names":["Button","styled","button","props","theme","colors","bordo","white","red","Container","div","Title","h1","FeedbackOptions","options","onSelect","map","option","type","name","onClick","List","ul","Item","li","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Paragraph","p","Notification","message","AppContainer","App","state","leaveFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentag","Math","round","this","Component","ReactDOM","render","StrictMode","black","green","blue","primaryText","secondaryText","document","getElementById"],"mappings":"sSAEaA,EAASC,IAAOC,OAAV,iSAGG,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,SAEzC,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,SAOjB,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,OAAOG,OCZzCC,EAAYR,IAAOS,IAAV,8CAITC,EAAQV,IAAOW,GAAV,gFAGP,SAACT,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,S,OCmB1BO,EAtBgB,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SACzC,OACC,cAACN,EAAD,UACEK,EAAQE,KAAI,SAAAC,GAAM,OAClB,cAACjB,EAAD,CACCkB,KAAK,SAELC,KAAMF,EACNG,QAAS,kBAAML,EAASE,IAJzB,SAKEA,GAHIA,SCVGI,EAAOpB,IAAOqB,GAAV,iDAGJC,EAAOtB,IAAOuB,GAAV,0HAIN,SAACrB,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,SCc1BkB,EApBS,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACpD,OACE,eAACT,EAAD,WACE,eAACE,EAAD,oBAAaG,EAAb,OACA,eAACH,EAAD,uBAAgBI,EAAhB,OACA,eAACJ,EAAD,mBAAYK,KACZ,eAACL,EAAD,qBAAcM,KACd,eAACN,EAAD,iCAA0BO,EAA1B,YCOSC,EAdC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrB,OACI,eAACxB,EAAD,WACKuB,GAAS,cAACrB,EAAD,UAAQqB,IACbC,MCLJC,EAAYjC,IAAOkC,EAAV,+DCCTC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC9B,OACI,cAACH,EAAD,UAAYG,KCHJC,EAAerC,IAAOS,IAAV,mKCwDV6B,EAjDf,4MACEC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEa,cAAgB,SAACxB,GACf,EAAKyB,UAAS,SAACC,GAAD,sBACR1B,EAAS0B,EAAU1B,GAAU,OATvC,EAYE2B,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQd,KAAR,EAAcC,QAAd,EAAuBC,KAb3B,EAiBGiB,+BAAiC,WAChC,IAAQnB,EAAS,EAAKc,MAAdd,KACR,OAAOoB,KAAKC,MAAc,IAAPrB,EAAc,EAAKkB,uBAAyB,GAnBnE,4CAsBE,WACE,MAA+BI,KAAKR,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,eAACU,EAAD,WAEE,cAAC,EAAD,CAASN,MAAM,wBAAf,SACC,cAAC,EAAD,CAAiBlB,QAAS,CAAC,OAAQ,UAAW,OAAQC,SAAUiC,KAAKP,kBAGtE,cAAC,EAAD,CAAST,MAAM,aAAf,SACiC,IAA9BgB,KAAKJ,qBACJ,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,KAAKJ,qBACZd,mBAAoBkB,KAAKH,mCAE3B,cAAC,EAAD,CAAcR,QAAQ,+BAxClC,GAAyBY,a,MCUzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAehD,MAfL,CACZC,OAAQ,CACNE,MAAO,UACP8C,MAAO,UACPC,MAAO,UACP9C,IAAK,UACL+C,KAAM,UACNC,YAAa,SACbC,cAAe,UACfnD,MAAO,YAMP,SACE,cAAC,EAAD,QAGJoD,SAASC,eAAe,W","file":"static/js/main.d0083652.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  width: auto;\n  margin: 15px;\n  background-color: ${(props) => props.theme.colors.bordo};\n  font-size: large;\n  color: ${(props) => props.theme.colors.white};\n  box-shadow: 0px 5px 10px 2px rgba(11, 11, 11, 0.34);\n  border: none;\n  border-radius: 9px;\n  padding: 5px 10px;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.red};\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  padding: 30px;\n`;\n\nexport const Title = styled.h1`\n  margin: 15px;\n  font-size: 30px;\n  color: ${(props) => props.theme.colors.bordo};\n`;\n","import { Button } from './FeedbackOptions.styled';\r\nimport { Container} from '../Container/Container.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const FeedbackOptions = ({options, onSelect}) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{options.map(option => \r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tkey={option}\r\n\t\t\t\t\tname={option}\r\n\t\t\t\t\tonClick={() => onSelect(option)}>\r\n\t\t\t\t\t{option}\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n  option: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  margin-top: 80px;\n`;\nexport const Item = styled.li`\n  /* background-color: azure; */\n  margin-bottom: 15px;\n  font-size: large;\n  color: ${(props) => props.theme.colors.white};\n`;\n","import PropTypes from 'prop-types';\r\nimport { List, Item } from './Statistics.styled'\r\n\r\nexport const Statistics=({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <List>\r\n      <Item>Good: {good} </Item>\r\n      <Item>Neutral: {neutral} </Item>\r\n      <Item>Bad: {bad}</Item>\r\n      <Item>Total: {total}</Item>\r\n      <Item>Pozitive feedback: {positivePercentage}% </Item>\r\n    </List>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import { Container, Title } from './Container.styled';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({title, children}) => {\r\n    return (\r\n        <Container>\r\n            {title && <Title>{title}</Title>}\r\n                {children}\r\n        </Container>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import styled from \"@emotion/styled\";\n\nexport const Paragraph = styled.p`\n  font-size: 28px;\n  color: red;\n`;\n","import PropTypes from 'prop-types';\r\nimport { Paragraph } from \"./Notification.styled\";\r\n\r\nexport const Notification = ({ message }) => {\r\n\treturn (\r\n\t    <Paragraph>{message}</Paragraph>\r\n\t);\r\n};\r\n\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired\r\n};\r\n","import styled from \"@emotion/styled\";\n\nexport const AppContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 340px;\n  /* background-color: red; */\n  gap: 24px;\n  width: 900px;\n  margin: auto;\n`;\n","import React, { Component } from \"react\";\n// import { render } from \"@testing-library/react\"; \nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport  Statistics  from \"../Statistics/Statistics\";\nimport  Section  from \"../Container/Container\";\nimport  {Notification}  from \"../Notification/Notification\";\nimport  {AppContainer}  from \"./App.styled\";\n// import { GrInstagram } from \"react-icons/gr\";\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = (option) => {\n    this.setState((prevState) =>\n      ({ [option]: prevState[option] + 1 }));\n  }\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n   countPositiveFeedbackPercentag = () => {\n    const { good } = this.state;\n    return Math.round((good * 100) / this.countTotalFeedback()) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <AppContainer>\n        {/* <GrInstagram></GrInstagram> */}\n        <Section title=\"Please leave feedback\">\n         <FeedbackOptions options={[\"good\", \"neutral\", \"bad\"]} onSelect={this.leaveFeedback} />\n        </Section>\n      \n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentag()}\n            />) : (\n            <Notification message=\"No feedback given\" />)\n          }\n        </Section>\n      </AppContainer>\n    );\n      \n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport App from \"./Components/App/App\";\nimport \"./index.css\";\n\nconst theme = {\n  colors: {\n    white: \"#ffffff\",\n    black: \"#010101\",\n    green: \"#4caf50\",\n    red: \"#f44336\",\n    blue: \"#2196f3\",\n    primaryText: \"212121\",\n    secondaryText: \"#757575\",\n    bordo: \"#640b0b\",\n  },\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}